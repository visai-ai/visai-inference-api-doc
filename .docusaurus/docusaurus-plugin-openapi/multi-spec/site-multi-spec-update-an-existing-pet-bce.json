{
  "type": "api",
  "id": "update-an-existing-pet",
  "unversionedId": "update-an-existing-pet",
  "title": "Update an existing pet",
  "description": "",
  "slug": "/update-an-existing-pet",
  "frontMatter": {},
  "api": {
    "tags": [
      "pet"
    ],
    "description": "",
    "operationId": "updatePet",
    "responses": {
      "400": {
        "description": "Invalid ID supplied"
      },
      "404": {
        "description": "Pet not found"
      },
      "405": {
        "description": "Validation exception"
      }
    },
    "security": [
      {
        "petstore_auth": [
          "write:pets",
          "read:pets"
        ]
      }
    ],
    "x-codeSamples": [
      {
        "lang": "PHP",
        "source": "$form = new \\PetStore\\Entities\\Pet();\n$form->setPetId(1);\n$form->setPetType(\"Dog\");\n$form->setName(\"Rex\");\n// set other fields\ntry {\n    $pet = $client->pets()->update($form);\n} catch (UnprocessableEntityException $e) {\n    var_dump($e->getErrors());\n}\n"
      }
    ],
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "description": "My Pet",
            "title": "Pettie",
            "type": "object",
            "required": [
              "name",
              "photoUrls"
            ],
            "discriminator": {
              "propertyName": "petType",
              "mapping": {
                "cat": "#/components/schemas/Cat",
                "dog": "#/components/schemas/Dog",
                "bee": "#/components/schemas/HoneyBee"
              }
            },
            "properties": {
              "id": {
                "externalDocs": {
                  "description": "Find more info here",
                  "url": "https://example.com"
                },
                "description": "Pet ID",
                "type": "integer",
                "format": "int64",
                "readOnly": true
              },
              "category": {
                "description": "Categories this pet belongs to",
                "type": "object",
                "properties": {
                  "id": {
                    "description": "Category ID",
                    "type": "integer",
                    "format": "int64",
                    "readOnly": true
                  },
                  "name": {
                    "description": "Category name",
                    "type": "string",
                    "minLength": 1
                  },
                  "sub": {
                    "description": "Test Sub Category",
                    "type": "object",
                    "properties": {
                      "prop1": {
                        "type": "string",
                        "description": "Dumb Property"
                      }
                    }
                  }
                },
                "xml": {
                  "name": "Category"
                }
              },
              "name": {
                "description": "The name given to a pet",
                "type": "string",
                "example": "Guru"
              },
              "photoUrls": {
                "description": "The list of URL to a cute photos featuring pet",
                "type": "array",
                "maxItems": 20,
                "xml": {
                  "name": "photoUrl",
                  "wrapped": true
                },
                "items": {
                  "type": "string",
                  "format": "url"
                }
              },
              "friend": {
                "$ref": "#/components/schemas/Pet"
              },
              "tags": {
                "description": "Tags attached to the pet",
                "type": "array",
                "minItems": 1,
                "xml": {
                  "name": "tag",
                  "wrapped": true
                },
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Tag ID",
                      "type": "integer",
                      "format": "int64",
                      "readOnly": true
                    },
                    "name": {
                      "description": "Tag name",
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "xml": {
                    "name": "Tag"
                  }
                }
              },
              "status": {
                "type": "string",
                "description": "Pet status in the store",
                "enum": [
                  "available",
                  "pending",
                  "sold"
                ]
              },
              "petType": {
                "description": "Type of a pet",
                "type": "string"
              }
            },
            "xml": {
              "name": "Pet"
            }
          }
        },
        "application/xml": {
          "schema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "hooray"
              }
            }
          }
        }
      },
      "description": "Pet object that needs to be added to the store",
      "required": true
    },
    "method": "put",
    "path": "/pet",
    "servers": [
      {
        "url": "//petstore.swagger.io/v2",
        "description": "Default server"
      },
      {
        "url": "//petstore.swagger.io/sandbox",
        "description": "Sandbox server"
      }
    ],
    "securitySchemes": {
      "petstore_auth": {
        "description": "Get access to data while protecting your account credentials.\nOAuth2 is also a safer and more secure way to give you access.\n",
        "type": "oauth2",
        "flows": {
          "implicit": {
            "authorizationUrl": "http://petstore.swagger.io/api/oauth/dialog",
            "scopes": {
              "write:pets": "modify pets in your account",
              "read:pets": "read your pets"
            }
          }
        }
      },
      "api_key": {
        "description": "For this sample, you can use the api key `special-key` to test the authorization filters.\n",
        "type": "apiKey",
        "name": "api_key",
        "in": "header"
      }
    },
    "jsonRequestBodyExample": {
      "id": 0,
      "category": {
        "id": 0,
        "name": "string",
        "sub": {
          "prop1": "string"
        }
      },
      "name": "Guru",
      "photoUrls": [
        "string"
      ],
      "tags": [
        {
          "id": 0,
          "name": "string"
        }
      ],
      "status": "available",
      "petType": "string"
    },
    "info": {
      "description": "This is a sample server Petstore server.\nYou can find out more about Swagger at\n[http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).\nFor this sample, you can use the api key `special-key` to test the authorization filters.\n\n# Introduction\nThis API is documented in **OpenAPI format** and is based on\n[Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.\nIt was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)\ntool and [ReDoc](https://github.com/Redocly/redoc) documentation. In addition to standard\nOpenAPI syntax we use a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md).\n\n# OpenAPI Specification\nThis API is documented in **OpenAPI format** and is based on\n[Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.\nIt was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)\ntool and [ReDoc](https://github.com/Redocly/redoc) documentation. In addition to standard\nOpenAPI syntax we use a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md).\n\n# Cross-Origin Resource Sharing\nThis API features Cross-Origin Resource Sharing (CORS) implemented in compliance with  [W3C spec](https://www.w3.org/TR/cors/).\nAnd that allows cross-domain communication from the browser.\nAll responses have a wildcard same-origin which makes them completely public and accessible to everyone, including any code on any site.\n\n# Authentication\n\nPetstore offers two forms of authentication:\n  - API Key\n  - OAuth2\nOAuth2 - an open protocol to allow secure authorization in a simple\nand standard method from web, mobile and desktop applications.\n\n<SecurityDefinitions />\n",
      "version": "1.0.0",
      "title": "Swagger Petstore YAML",
      "termsOfService": "http://swagger.io/terms/",
      "contact": {
        "name": "API Support",
        "email": "apiteam@swagger.io",
        "url": "https://github.com/Redocly/redoc"
      },
      "x-logo": {
        "url": "https://redocly.github.io/redoc/petstore-logo.png",
        "altText": "Petstore logo"
      },
      "license": {
        "name": "Apache 2.0",
        "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
      }
    },
    "postman": {
      "name": "Update an existing pet",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "url": {
        "path": [
          "pet"
        ],
        "host": [
          "{{baseUrl}}"
        ],
        "query": [],
        "variable": []
      },
      "header": [
        {
          "description": {
            "content": "The language you prefer for messages. Supported values are en-AU, en-CA, en-GB, en-US",
            "type": "text/plain"
          },
          "key": "Accept-Language",
          "value": "en-AU"
        },
        {
          "key": "Content-Type",
          "value": "application/json"
        }
      ],
      "method": "PUT",
      "body": {
        "mode": "raw",
        "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<url>\",\n        \"<url>\"\n    ],\n    \"category\": {\n        \"name\": \"<string>\",\n        \"sub\": {\n            \"prop1\": \"<string>\"\n        }\n    },\n    \"friend\": {\n        \"name\": \"<string>\",\n        \"photoUrls\": [\n            \"<url>\",\n            \"<url>\"\n        ],\n        \"category\": {\n            \"name\": \"<string>\",\n            \"sub\": {\n                \"prop1\": \"<string>\"\n            }\n        },\n        \"friend\": {\n            \"value\": \"<Circular reference to #/components/schemas/Pet detected>\"\n        },\n        \"tags\": [\n            {\n                \"name\": \"<string>\"\n            }\n        ],\n        \"status\": \"<string>\",\n        \"petType\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\",\n    \"petType\": \"<string>\"\n}"
      },
      "auth": {
        "type": "oauth2",
        "oauth2": []
      }
    }
  },
  "source": "@site/examples/petstore.yaml",
  "sourceDirName": ".",
  "permalink": "/multi-spec/update-an-existing-pet",
  "previous": {
    "title": "Add a new pet to the store",
    "permalink": "/multi-spec/add-a-new-pet-to-the-store"
  },
  "next": {
    "title": "Find pet by ID",
    "permalink": "/multi-spec/find-pet-by-id"
  }
}